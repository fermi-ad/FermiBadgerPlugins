from badger import environment
import math

class Environment(environment.Environment):

    name = 'Linac_Energy_Opt'
    variables = {
        'C7PHAS': [-math.pi, math.pi],
        'x1': [-1, 1],
        'x2': [-1, 1],
    }
    observables = ['f']

    _variables = {
        'C7PHAS': 0.0,
        'x1': 0.0,
        'x2': 0.0,
    }
    _observations = {
        'f': 0.0,
    }

    def get_variables(self, variable_names):
        variable_outputs = {v: self._variables[v] for v in variable_names}

        return variable_outputs

    def set_variables(self, variable_inputs: dict[str, float]):
        for var, x in variable_inputs.items():
            self._variables[var] = x

        # Filling up the observations
        f = self._variables['C7PHAS']*  (self._variables['x1'] ** 2 + self._variables['x2'] ** 2)

        self._observations['f'] = f

    def get_observables(self, observable_names):
        return {k: self._observations[k] for k in observable_names}
